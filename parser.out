Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    UMINUS

Grammar

Rule 0     S' -> program
Rule 1     program -> stmts
Rule 2     stmts -> stmt SEMICOLON stmts
Rule 3     stmts -> block stmts
Rule 4     stmts -> conditional stmts
Rule 5     stmts -> loop stmts
Rule 6     stmts -> function stmts
Rule 7     stmts -> empty
Rule 8     conditional -> IF LPAREN expression RPAREN block
Rule 9     conditional -> IF LPAREN expression RPAREN block ELSE block
Rule 10    loop -> WHILE LPAREN expression RPAREN block
Rule 11    block -> LCURLY stmts RCURLY
Rule 12    stmt -> expression
Rule 13    stmt -> assignment
Rule 14    stmt -> print
Rule 15    stmt -> return
Rule 16    function -> ID LPAREN parameters RPAREN block
Rule 17    function -> ID LPAREN RPAREN block
Rule 18    parameters -> parameters COMMA ID
Rule 19    parameters -> ID
Rule 20    return -> RETURN expression
Rule 21    print -> PRINT LPAREN expression RPAREN
Rule 22    functioncall -> ID LPAREN list RPAREN
Rule 23    functioncall -> ID LPAREN RPAREN
Rule 24    expression -> logical
Rule 25    expression -> mathexpression
Rule 26    expression -> comparison
Rule 27    expression -> factor
Rule 28    expression -> lentry
Rule 29    expression -> lindex
Rule 30    expression -> functioncall
Rule 31    lindex -> expression LBRACKET expression RBRACKET
Rule 32    logical -> NOT expression
Rule 33    logical -> expression AND expression
Rule 34    logical -> expression OR expression
Rule 35    logical -> expression IN expression
Rule 36    comparison -> expression LT expression
Rule 37    comparison -> expression LTE expression
Rule 38    comparison -> expression GT expression
Rule 39    comparison -> expression GTE expression
Rule 40    comparison -> expression NE expression
Rule 41    comparison -> expression EE expression
Rule 42    assignment -> ID EQUALS expression
Rule 43    assignment -> expression LBRACKET expression RBRACKET EQUALS expression
Rule 44    mathexpression -> expression PLUS expression
Rule 45    mathexpression -> expression TIMES expression
Rule 46    mathexpression -> expression MINUS expression
Rule 47    mathexpression -> expression DIVIDE expression
Rule 48    mathexpression -> expression INTDIVIDE expression
Rule 49    mathexpression -> expression EXPONENT expression
Rule 50    mathexpression -> expression MODULUS expression
Rule 51    mathexpression -> MINUS factor
Rule 52    factor -> LPAREN expression RPAREN
Rule 53    factor -> NUMBER
Rule 54    factor -> REAL
Rule 55    factor -> STRING
Rule 56    factor -> variable
Rule 57    variable -> ID
Rule 58    lentry -> LBRACKET RBRACKET
Rule 59    lentry -> LBRACKET list RBRACKET
Rule 60    list -> listhead elem
Rule 61    listhead -> listhead elem COMMA
Rule 62    listhead -> empty
Rule 63    elem -> expression
Rule 64    empty -> <empty>

Terminals, with rules where they appear

AND                  : 33
COMMA                : 18 61
DIVIDE               : 47
EE                   : 41
ELSE                 : 9
EQUALS               : 42 43
EXPONENT             : 49
GT                   : 38
GTE                  : 39
ID                   : 16 17 18 19 22 23 42 57
IF                   : 8 9
IN                   : 35
INTDIVIDE            : 48
LBRACKET             : 31 43 58 59
LCURLY               : 11
LPAREN               : 8 9 10 16 17 21 22 23 52
LT                   : 36
LTE                  : 37
MINUS                : 46 51
MODULUS              : 50
NE                   : 40
NOT                  : 32
NUMBER               : 53
OR                   : 34
PLUS                 : 44
PRINT                : 21
RBRACKET             : 31 43 58 59
RCURLY               : 11
REAL                 : 54
RETURN               : 20
RPAREN               : 8 9 10 16 17 21 22 23 52
SEMICOLON            : 2
STRING               : 55
TIMES                : 45
UMINUS               : 
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

assignment           : 13
block                : 3 8 9 9 10 16 17
comparison           : 26
conditional          : 4
elem                 : 60 61
empty                : 7 62
expression           : 8 9 10 12 20 21 31 31 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 43 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 52 63
factor               : 27 51
function             : 6
functioncall         : 30
lentry               : 28
lindex               : 29
list                 : 22 59
listhead             : 60 61
logical              : 24
loop                 : 5
mathexpression       : 25
parameters           : 16 18
print                : 14
program              : 0
return               : 15
stmt                 : 2
stmts                : 1 2 3 4 5 6 11
variable             : 56

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmts
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    $end            reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    variable                       shift and go to state 26
    print                          shift and go to state 6
    logical                        shift and go to state 9
    loop                           shift and go to state 16
    lentry                         shift and go to state 28
    expression                     shift and go to state 13
    mathexpression                 shift and go to state 14
    assignment                     shift and go to state 30
    function                       shift and go to state 10
    return                         shift and go to state 23
    functioncall                   shift and go to state 22
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    factor                         shift and go to state 12
    stmt                           shift and go to state 19
    program                        shift and go to state 21
    stmts                          shift and go to state 32

state 1

    (52) factor -> LPAREN . expression RPAREN
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 34
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 2

    (51) mathexpression -> MINUS . factor
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (57) variable -> . ID

    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    ID              shift and go to state 36

    variable                       shift and go to state 26
    factor                         shift and go to state 37

state 3

    (3) stmts -> block . stmts
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    $end            reduce using rule 64 (empty -> .)
    RCURLY          reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    mathexpression                 shift and go to state 14
    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    return                         shift and go to state 23
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    assignment                     shift and go to state 30
    print                          shift and go to state 6
    lentry                         shift and go to state 28
    stmt                           shift and go to state 19
    stmts                          shift and go to state 38
    logical                        shift and go to state 9
    function                       shift and go to state 10
    loop                           shift and go to state 16
    factor                         shift and go to state 12
    expression                     shift and go to state 13

state 4

    (7) stmts -> empty .

    RCURLY          reduce using rule 7 (stmts -> empty .)
    $end            reduce using rule 7 (stmts -> empty .)


state 5

    (4) stmts -> conditional . stmts
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    $end            reduce using rule 64 (empty -> .)
    RCURLY          reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    mathexpression                 shift and go to state 14
    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    return                         shift and go to state 23
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    assignment                     shift and go to state 30
    print                          shift and go to state 6
    lentry                         shift and go to state 28
    stmt                           shift and go to state 19
    stmts                          shift and go to state 39
    logical                        shift and go to state 9
    function                       shift and go to state 10
    loop                           shift and go to state 16
    factor                         shift and go to state 12
    expression                     shift and go to state 13

state 6

    (14) stmt -> print .

    SEMICOLON       reduce using rule 14 (stmt -> print .)


state 7

    (8) conditional -> IF . LPAREN expression RPAREN block
    (9) conditional -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 40


state 8

    (58) lentry -> LBRACKET . RBRACKET
    (59) lentry -> LBRACKET . list RBRACKET
    (60) list -> . listhead elem
    (61) listhead -> . listhead elem COMMA
    (62) listhead -> . empty
    (64) empty -> .

    RBRACKET        shift and go to state 44
    NOT             reduce using rule 64 (empty -> .)
    MINUS           reduce using rule 64 (empty -> .)
    LPAREN          reduce using rule 64 (empty -> .)
    NUMBER          reduce using rule 64 (empty -> .)
    REAL            reduce using rule 64 (empty -> .)
    STRING          reduce using rule 64 (empty -> .)
    LBRACKET        reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)

    listhead                       shift and go to state 42
    empty                          shift and go to state 41
    list                           shift and go to state 43

state 9

    (24) expression -> logical .

    AND             reduce using rule 24 (expression -> logical .)
    OR              reduce using rule 24 (expression -> logical .)
    IN              reduce using rule 24 (expression -> logical .)
    PLUS            reduce using rule 24 (expression -> logical .)
    TIMES           reduce using rule 24 (expression -> logical .)
    MINUS           reduce using rule 24 (expression -> logical .)
    DIVIDE          reduce using rule 24 (expression -> logical .)
    INTDIVIDE       reduce using rule 24 (expression -> logical .)
    EXPONENT        reduce using rule 24 (expression -> logical .)
    MODULUS         reduce using rule 24 (expression -> logical .)
    LT              reduce using rule 24 (expression -> logical .)
    LTE             reduce using rule 24 (expression -> logical .)
    GT              reduce using rule 24 (expression -> logical .)
    GTE             reduce using rule 24 (expression -> logical .)
    NE              reduce using rule 24 (expression -> logical .)
    EE              reduce using rule 24 (expression -> logical .)
    LBRACKET        reduce using rule 24 (expression -> logical .)
    SEMICOLON       reduce using rule 24 (expression -> logical .)
    RPAREN          reduce using rule 24 (expression -> logical .)
    COMMA           reduce using rule 24 (expression -> logical .)
    RBRACKET        reduce using rule 24 (expression -> logical .)


state 10

    (6) stmts -> function . stmts
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    $end            reduce using rule 64 (empty -> .)
    RCURLY          reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    mathexpression                 shift and go to state 14
    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    return                         shift and go to state 23
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    assignment                     shift and go to state 30
    print                          shift and go to state 6
    lentry                         shift and go to state 28
    stmt                           shift and go to state 19
    stmts                          shift and go to state 45
    logical                        shift and go to state 9
    function                       shift and go to state 10
    loop                           shift and go to state 16
    factor                         shift and go to state 12
    expression                     shift and go to state 13

state 11

    (32) logical -> NOT . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 46
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 12

    (27) expression -> factor .

    AND             reduce using rule 27 (expression -> factor .)
    OR              reduce using rule 27 (expression -> factor .)
    IN              reduce using rule 27 (expression -> factor .)
    PLUS            reduce using rule 27 (expression -> factor .)
    TIMES           reduce using rule 27 (expression -> factor .)
    MINUS           reduce using rule 27 (expression -> factor .)
    DIVIDE          reduce using rule 27 (expression -> factor .)
    INTDIVIDE       reduce using rule 27 (expression -> factor .)
    EXPONENT        reduce using rule 27 (expression -> factor .)
    MODULUS         reduce using rule 27 (expression -> factor .)
    LT              reduce using rule 27 (expression -> factor .)
    LTE             reduce using rule 27 (expression -> factor .)
    GT              reduce using rule 27 (expression -> factor .)
    GTE             reduce using rule 27 (expression -> factor .)
    NE              reduce using rule 27 (expression -> factor .)
    EE              reduce using rule 27 (expression -> factor .)
    LBRACKET        reduce using rule 27 (expression -> factor .)
    SEMICOLON       reduce using rule 27 (expression -> factor .)
    RPAREN          reduce using rule 27 (expression -> factor .)
    COMMA           reduce using rule 27 (expression -> factor .)
    RBRACKET        reduce using rule 27 (expression -> factor .)


state 13

    (12) stmt -> expression .
    (43) assignment -> expression . LBRACKET expression RBRACKET EQUALS expression
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 12 (stmt -> expression .)
    LBRACKET        shift and go to state 57
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54


state 14

    (25) expression -> mathexpression .

    AND             reduce using rule 25 (expression -> mathexpression .)
    OR              reduce using rule 25 (expression -> mathexpression .)
    IN              reduce using rule 25 (expression -> mathexpression .)
    PLUS            reduce using rule 25 (expression -> mathexpression .)
    TIMES           reduce using rule 25 (expression -> mathexpression .)
    MINUS           reduce using rule 25 (expression -> mathexpression .)
    DIVIDE          reduce using rule 25 (expression -> mathexpression .)
    INTDIVIDE       reduce using rule 25 (expression -> mathexpression .)
    EXPONENT        reduce using rule 25 (expression -> mathexpression .)
    MODULUS         reduce using rule 25 (expression -> mathexpression .)
    LT              reduce using rule 25 (expression -> mathexpression .)
    LTE             reduce using rule 25 (expression -> mathexpression .)
    GT              reduce using rule 25 (expression -> mathexpression .)
    GTE             reduce using rule 25 (expression -> mathexpression .)
    NE              reduce using rule 25 (expression -> mathexpression .)
    EE              reduce using rule 25 (expression -> mathexpression .)
    LBRACKET        reduce using rule 25 (expression -> mathexpression .)
    SEMICOLON       reduce using rule 25 (expression -> mathexpression .)
    RPAREN          reduce using rule 25 (expression -> mathexpression .)
    COMMA           reduce using rule 25 (expression -> mathexpression .)
    RBRACKET        reduce using rule 25 (expression -> mathexpression .)


state 15

    (21) print -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 64


state 16

    (5) stmts -> loop . stmts
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    $end            reduce using rule 64 (empty -> .)
    RCURLY          reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    mathexpression                 shift and go to state 14
    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    return                         shift and go to state 23
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    assignment                     shift and go to state 30
    print                          shift and go to state 6
    lentry                         shift and go to state 28
    stmt                           shift and go to state 19
    stmts                          shift and go to state 65
    logical                        shift and go to state 9
    function                       shift and go to state 10
    loop                           shift and go to state 16
    factor                         shift and go to state 12
    expression                     shift and go to state 13

state 17

    (29) expression -> lindex .

    AND             reduce using rule 29 (expression -> lindex .)
    OR              reduce using rule 29 (expression -> lindex .)
    IN              reduce using rule 29 (expression -> lindex .)
    PLUS            reduce using rule 29 (expression -> lindex .)
    TIMES           reduce using rule 29 (expression -> lindex .)
    MINUS           reduce using rule 29 (expression -> lindex .)
    DIVIDE          reduce using rule 29 (expression -> lindex .)
    INTDIVIDE       reduce using rule 29 (expression -> lindex .)
    EXPONENT        reduce using rule 29 (expression -> lindex .)
    MODULUS         reduce using rule 29 (expression -> lindex .)
    LT              reduce using rule 29 (expression -> lindex .)
    LTE             reduce using rule 29 (expression -> lindex .)
    GT              reduce using rule 29 (expression -> lindex .)
    GTE             reduce using rule 29 (expression -> lindex .)
    NE              reduce using rule 29 (expression -> lindex .)
    EE              reduce using rule 29 (expression -> lindex .)
    LBRACKET        reduce using rule 29 (expression -> lindex .)
    SEMICOLON       reduce using rule 29 (expression -> lindex .)
    RPAREN          reduce using rule 29 (expression -> lindex .)
    COMMA           reduce using rule 29 (expression -> lindex .)
    RBRACKET        reduce using rule 29 (expression -> lindex .)


state 18

    (26) expression -> comparison .

    AND             reduce using rule 26 (expression -> comparison .)
    OR              reduce using rule 26 (expression -> comparison .)
    IN              reduce using rule 26 (expression -> comparison .)
    PLUS            reduce using rule 26 (expression -> comparison .)
    TIMES           reduce using rule 26 (expression -> comparison .)
    MINUS           reduce using rule 26 (expression -> comparison .)
    DIVIDE          reduce using rule 26 (expression -> comparison .)
    INTDIVIDE       reduce using rule 26 (expression -> comparison .)
    EXPONENT        reduce using rule 26 (expression -> comparison .)
    MODULUS         reduce using rule 26 (expression -> comparison .)
    LT              reduce using rule 26 (expression -> comparison .)
    LTE             reduce using rule 26 (expression -> comparison .)
    GT              reduce using rule 26 (expression -> comparison .)
    GTE             reduce using rule 26 (expression -> comparison .)
    NE              reduce using rule 26 (expression -> comparison .)
    EE              reduce using rule 26 (expression -> comparison .)
    LBRACKET        reduce using rule 26 (expression -> comparison .)
    SEMICOLON       reduce using rule 26 (expression -> comparison .)
    RPAREN          reduce using rule 26 (expression -> comparison .)
    COMMA           reduce using rule 26 (expression -> comparison .)
    RBRACKET        reduce using rule 26 (expression -> comparison .)


state 19

    (2) stmts -> stmt . SEMICOLON stmts

    SEMICOLON       shift and go to state 66


state 20

    (16) function -> ID . LPAREN parameters RPAREN block
    (17) function -> ID . LPAREN RPAREN block
    (42) assignment -> ID . EQUALS expression
    (22) functioncall -> ID . LPAREN list RPAREN
    (23) functioncall -> ID . LPAREN RPAREN
    (57) variable -> ID .

    LPAREN          shift and go to state 67
    EQUALS          shift and go to state 68
    LBRACKET        reduce using rule 57 (variable -> ID .)
    AND             reduce using rule 57 (variable -> ID .)
    OR              reduce using rule 57 (variable -> ID .)
    IN              reduce using rule 57 (variable -> ID .)
    PLUS            reduce using rule 57 (variable -> ID .)
    TIMES           reduce using rule 57 (variable -> ID .)
    MINUS           reduce using rule 57 (variable -> ID .)
    DIVIDE          reduce using rule 57 (variable -> ID .)
    INTDIVIDE       reduce using rule 57 (variable -> ID .)
    EXPONENT        reduce using rule 57 (variable -> ID .)
    MODULUS         reduce using rule 57 (variable -> ID .)
    LT              reduce using rule 57 (variable -> ID .)
    LTE             reduce using rule 57 (variable -> ID .)
    GT              reduce using rule 57 (variable -> ID .)
    GTE             reduce using rule 57 (variable -> ID .)
    NE              reduce using rule 57 (variable -> ID .)
    EE              reduce using rule 57 (variable -> ID .)
    SEMICOLON       reduce using rule 57 (variable -> ID .)


state 21

    (0) S' -> program .



state 22

    (30) expression -> functioncall .

    AND             reduce using rule 30 (expression -> functioncall .)
    OR              reduce using rule 30 (expression -> functioncall .)
    IN              reduce using rule 30 (expression -> functioncall .)
    PLUS            reduce using rule 30 (expression -> functioncall .)
    TIMES           reduce using rule 30 (expression -> functioncall .)
    MINUS           reduce using rule 30 (expression -> functioncall .)
    DIVIDE          reduce using rule 30 (expression -> functioncall .)
    INTDIVIDE       reduce using rule 30 (expression -> functioncall .)
    EXPONENT        reduce using rule 30 (expression -> functioncall .)
    MODULUS         reduce using rule 30 (expression -> functioncall .)
    LT              reduce using rule 30 (expression -> functioncall .)
    LTE             reduce using rule 30 (expression -> functioncall .)
    GT              reduce using rule 30 (expression -> functioncall .)
    GTE             reduce using rule 30 (expression -> functioncall .)
    NE              reduce using rule 30 (expression -> functioncall .)
    EE              reduce using rule 30 (expression -> functioncall .)
    LBRACKET        reduce using rule 30 (expression -> functioncall .)
    SEMICOLON       reduce using rule 30 (expression -> functioncall .)
    RPAREN          reduce using rule 30 (expression -> functioncall .)
    COMMA           reduce using rule 30 (expression -> functioncall .)
    RBRACKET        reduce using rule 30 (expression -> functioncall .)


state 23

    (15) stmt -> return .

    SEMICOLON       reduce using rule 15 (stmt -> return .)


state 24

    (10) loop -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 69


state 25

    (55) factor -> STRING .

    LBRACKET        reduce using rule 55 (factor -> STRING .)
    AND             reduce using rule 55 (factor -> STRING .)
    OR              reduce using rule 55 (factor -> STRING .)
    IN              reduce using rule 55 (factor -> STRING .)
    PLUS            reduce using rule 55 (factor -> STRING .)
    TIMES           reduce using rule 55 (factor -> STRING .)
    MINUS           reduce using rule 55 (factor -> STRING .)
    DIVIDE          reduce using rule 55 (factor -> STRING .)
    INTDIVIDE       reduce using rule 55 (factor -> STRING .)
    EXPONENT        reduce using rule 55 (factor -> STRING .)
    MODULUS         reduce using rule 55 (factor -> STRING .)
    LT              reduce using rule 55 (factor -> STRING .)
    LTE             reduce using rule 55 (factor -> STRING .)
    GT              reduce using rule 55 (factor -> STRING .)
    GTE             reduce using rule 55 (factor -> STRING .)
    NE              reduce using rule 55 (factor -> STRING .)
    EE              reduce using rule 55 (factor -> STRING .)
    SEMICOLON       reduce using rule 55 (factor -> STRING .)
    RPAREN          reduce using rule 55 (factor -> STRING .)
    COMMA           reduce using rule 55 (factor -> STRING .)
    RBRACKET        reduce using rule 55 (factor -> STRING .)


state 26

    (56) factor -> variable .

    LBRACKET        reduce using rule 56 (factor -> variable .)
    AND             reduce using rule 56 (factor -> variable .)
    OR              reduce using rule 56 (factor -> variable .)
    IN              reduce using rule 56 (factor -> variable .)
    PLUS            reduce using rule 56 (factor -> variable .)
    TIMES           reduce using rule 56 (factor -> variable .)
    MINUS           reduce using rule 56 (factor -> variable .)
    DIVIDE          reduce using rule 56 (factor -> variable .)
    INTDIVIDE       reduce using rule 56 (factor -> variable .)
    EXPONENT        reduce using rule 56 (factor -> variable .)
    MODULUS         reduce using rule 56 (factor -> variable .)
    LT              reduce using rule 56 (factor -> variable .)
    LTE             reduce using rule 56 (factor -> variable .)
    GT              reduce using rule 56 (factor -> variable .)
    GTE             reduce using rule 56 (factor -> variable .)
    NE              reduce using rule 56 (factor -> variable .)
    EE              reduce using rule 56 (factor -> variable .)
    SEMICOLON       reduce using rule 56 (factor -> variable .)
    RPAREN          reduce using rule 56 (factor -> variable .)
    COMMA           reduce using rule 56 (factor -> variable .)
    RBRACKET        reduce using rule 56 (factor -> variable .)


state 27

    (54) factor -> REAL .

    LBRACKET        reduce using rule 54 (factor -> REAL .)
    AND             reduce using rule 54 (factor -> REAL .)
    OR              reduce using rule 54 (factor -> REAL .)
    IN              reduce using rule 54 (factor -> REAL .)
    PLUS            reduce using rule 54 (factor -> REAL .)
    TIMES           reduce using rule 54 (factor -> REAL .)
    MINUS           reduce using rule 54 (factor -> REAL .)
    DIVIDE          reduce using rule 54 (factor -> REAL .)
    INTDIVIDE       reduce using rule 54 (factor -> REAL .)
    EXPONENT        reduce using rule 54 (factor -> REAL .)
    MODULUS         reduce using rule 54 (factor -> REAL .)
    LT              reduce using rule 54 (factor -> REAL .)
    LTE             reduce using rule 54 (factor -> REAL .)
    GT              reduce using rule 54 (factor -> REAL .)
    GTE             reduce using rule 54 (factor -> REAL .)
    NE              reduce using rule 54 (factor -> REAL .)
    EE              reduce using rule 54 (factor -> REAL .)
    SEMICOLON       reduce using rule 54 (factor -> REAL .)
    RPAREN          reduce using rule 54 (factor -> REAL .)
    COMMA           reduce using rule 54 (factor -> REAL .)
    RBRACKET        reduce using rule 54 (factor -> REAL .)


state 28

    (28) expression -> lentry .

    AND             reduce using rule 28 (expression -> lentry .)
    OR              reduce using rule 28 (expression -> lentry .)
    IN              reduce using rule 28 (expression -> lentry .)
    PLUS            reduce using rule 28 (expression -> lentry .)
    TIMES           reduce using rule 28 (expression -> lentry .)
    MINUS           reduce using rule 28 (expression -> lentry .)
    DIVIDE          reduce using rule 28 (expression -> lentry .)
    INTDIVIDE       reduce using rule 28 (expression -> lentry .)
    EXPONENT        reduce using rule 28 (expression -> lentry .)
    MODULUS         reduce using rule 28 (expression -> lentry .)
    LT              reduce using rule 28 (expression -> lentry .)
    LTE             reduce using rule 28 (expression -> lentry .)
    GT              reduce using rule 28 (expression -> lentry .)
    GTE             reduce using rule 28 (expression -> lentry .)
    NE              reduce using rule 28 (expression -> lentry .)
    EE              reduce using rule 28 (expression -> lentry .)
    LBRACKET        reduce using rule 28 (expression -> lentry .)
    SEMICOLON       reduce using rule 28 (expression -> lentry .)
    RPAREN          reduce using rule 28 (expression -> lentry .)
    COMMA           reduce using rule 28 (expression -> lentry .)
    RBRACKET        reduce using rule 28 (expression -> lentry .)


state 29

    (53) factor -> NUMBER .

    LBRACKET        reduce using rule 53 (factor -> NUMBER .)
    AND             reduce using rule 53 (factor -> NUMBER .)
    OR              reduce using rule 53 (factor -> NUMBER .)
    IN              reduce using rule 53 (factor -> NUMBER .)
    PLUS            reduce using rule 53 (factor -> NUMBER .)
    TIMES           reduce using rule 53 (factor -> NUMBER .)
    MINUS           reduce using rule 53 (factor -> NUMBER .)
    DIVIDE          reduce using rule 53 (factor -> NUMBER .)
    INTDIVIDE       reduce using rule 53 (factor -> NUMBER .)
    EXPONENT        reduce using rule 53 (factor -> NUMBER .)
    MODULUS         reduce using rule 53 (factor -> NUMBER .)
    LT              reduce using rule 53 (factor -> NUMBER .)
    LTE             reduce using rule 53 (factor -> NUMBER .)
    GT              reduce using rule 53 (factor -> NUMBER .)
    GTE             reduce using rule 53 (factor -> NUMBER .)
    NE              reduce using rule 53 (factor -> NUMBER .)
    EE              reduce using rule 53 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 53 (factor -> NUMBER .)
    RPAREN          reduce using rule 53 (factor -> NUMBER .)
    COMMA           reduce using rule 53 (factor -> NUMBER .)
    RBRACKET        reduce using rule 53 (factor -> NUMBER .)


state 30

    (13) stmt -> assignment .

    SEMICOLON       reduce using rule 13 (stmt -> assignment .)


state 31

    (11) block -> LCURLY . stmts RCURLY
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    RCURLY          reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    mathexpression                 shift and go to state 14
    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    return                         shift and go to state 23
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    assignment                     shift and go to state 30
    print                          shift and go to state 6
    lentry                         shift and go to state 28
    stmt                           shift and go to state 19
    stmts                          shift and go to state 70
    logical                        shift and go to state 9
    function                       shift and go to state 10
    loop                           shift and go to state 16
    factor                         shift and go to state 12
    expression                     shift and go to state 13

state 32

    (1) program -> stmts .

    $end            reduce using rule 1 (program -> stmts .)


state 33

    (20) return -> RETURN . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 71
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 34

    (52) factor -> LPAREN expression . RPAREN
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 72
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 35

    (22) functioncall -> ID . LPAREN list RPAREN
    (23) functioncall -> ID . LPAREN RPAREN
    (57) variable -> ID .

    LPAREN          shift and go to state 74
    AND             reduce using rule 57 (variable -> ID .)
    OR              reduce using rule 57 (variable -> ID .)
    IN              reduce using rule 57 (variable -> ID .)
    PLUS            reduce using rule 57 (variable -> ID .)
    TIMES           reduce using rule 57 (variable -> ID .)
    MINUS           reduce using rule 57 (variable -> ID .)
    DIVIDE          reduce using rule 57 (variable -> ID .)
    INTDIVIDE       reduce using rule 57 (variable -> ID .)
    EXPONENT        reduce using rule 57 (variable -> ID .)
    MODULUS         reduce using rule 57 (variable -> ID .)
    LT              reduce using rule 57 (variable -> ID .)
    LTE             reduce using rule 57 (variable -> ID .)
    GT              reduce using rule 57 (variable -> ID .)
    GTE             reduce using rule 57 (variable -> ID .)
    NE              reduce using rule 57 (variable -> ID .)
    EE              reduce using rule 57 (variable -> ID .)
    LBRACKET        reduce using rule 57 (variable -> ID .)
    SEMICOLON       reduce using rule 57 (variable -> ID .)
    RPAREN          reduce using rule 57 (variable -> ID .)
    COMMA           reduce using rule 57 (variable -> ID .)
    RBRACKET        reduce using rule 57 (variable -> ID .)


state 36

    (57) variable -> ID .

    LBRACKET        reduce using rule 57 (variable -> ID .)
    AND             reduce using rule 57 (variable -> ID .)
    OR              reduce using rule 57 (variable -> ID .)
    IN              reduce using rule 57 (variable -> ID .)
    PLUS            reduce using rule 57 (variable -> ID .)
    TIMES           reduce using rule 57 (variable -> ID .)
    MINUS           reduce using rule 57 (variable -> ID .)
    DIVIDE          reduce using rule 57 (variable -> ID .)
    INTDIVIDE       reduce using rule 57 (variable -> ID .)
    EXPONENT        reduce using rule 57 (variable -> ID .)
    MODULUS         reduce using rule 57 (variable -> ID .)
    LT              reduce using rule 57 (variable -> ID .)
    LTE             reduce using rule 57 (variable -> ID .)
    GT              reduce using rule 57 (variable -> ID .)
    GTE             reduce using rule 57 (variable -> ID .)
    NE              reduce using rule 57 (variable -> ID .)
    EE              reduce using rule 57 (variable -> ID .)
    SEMICOLON       reduce using rule 57 (variable -> ID .)
    RPAREN          reduce using rule 57 (variable -> ID .)
    COMMA           reduce using rule 57 (variable -> ID .)
    RBRACKET        reduce using rule 57 (variable -> ID .)


state 37

    (51) mathexpression -> MINUS factor .

    AND             reduce using rule 51 (mathexpression -> MINUS factor .)
    OR              reduce using rule 51 (mathexpression -> MINUS factor .)
    IN              reduce using rule 51 (mathexpression -> MINUS factor .)
    PLUS            reduce using rule 51 (mathexpression -> MINUS factor .)
    TIMES           reduce using rule 51 (mathexpression -> MINUS factor .)
    MINUS           reduce using rule 51 (mathexpression -> MINUS factor .)
    DIVIDE          reduce using rule 51 (mathexpression -> MINUS factor .)
    INTDIVIDE       reduce using rule 51 (mathexpression -> MINUS factor .)
    EXPONENT        reduce using rule 51 (mathexpression -> MINUS factor .)
    MODULUS         reduce using rule 51 (mathexpression -> MINUS factor .)
    LT              reduce using rule 51 (mathexpression -> MINUS factor .)
    LTE             reduce using rule 51 (mathexpression -> MINUS factor .)
    GT              reduce using rule 51 (mathexpression -> MINUS factor .)
    GTE             reduce using rule 51 (mathexpression -> MINUS factor .)
    NE              reduce using rule 51 (mathexpression -> MINUS factor .)
    EE              reduce using rule 51 (mathexpression -> MINUS factor .)
    LBRACKET        reduce using rule 51 (mathexpression -> MINUS factor .)
    SEMICOLON       reduce using rule 51 (mathexpression -> MINUS factor .)
    RPAREN          reduce using rule 51 (mathexpression -> MINUS factor .)
    COMMA           reduce using rule 51 (mathexpression -> MINUS factor .)
    RBRACKET        reduce using rule 51 (mathexpression -> MINUS factor .)


state 38

    (3) stmts -> block stmts .

    RCURLY          reduce using rule 3 (stmts -> block stmts .)
    $end            reduce using rule 3 (stmts -> block stmts .)


state 39

    (4) stmts -> conditional stmts .

    RCURLY          reduce using rule 4 (stmts -> conditional stmts .)
    $end            reduce using rule 4 (stmts -> conditional stmts .)


state 40

    (8) conditional -> IF LPAREN . expression RPAREN block
    (9) conditional -> IF LPAREN . expression RPAREN block ELSE block
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 75
    variable                       shift and go to state 26
    functioncall                   shift and go to state 22
    lentry                         shift and go to state 28
    factor                         shift and go to state 12

state 41

    (62) listhead -> empty .

    NOT             reduce using rule 62 (listhead -> empty .)
    MINUS           reduce using rule 62 (listhead -> empty .)
    LPAREN          reduce using rule 62 (listhead -> empty .)
    NUMBER          reduce using rule 62 (listhead -> empty .)
    REAL            reduce using rule 62 (listhead -> empty .)
    STRING          reduce using rule 62 (listhead -> empty .)
    LBRACKET        reduce using rule 62 (listhead -> empty .)
    ID              reduce using rule 62 (listhead -> empty .)


state 42

    (60) list -> listhead . elem
    (61) listhead -> listhead . elem COMMA
    (63) elem -> . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    expression                     shift and go to state 76
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    logical                        shift and go to state 9
    factor                         shift and go to state 12
    elem                           shift and go to state 77
    lentry                         shift and go to state 28

state 43

    (59) lentry -> LBRACKET list . RBRACKET

    RBRACKET        shift and go to state 78


state 44

    (58) lentry -> LBRACKET RBRACKET .

    AND             reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    OR              reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    IN              reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    INTDIVIDE       reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    EXPONENT        reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    MODULUS         reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    LT              reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    LTE             reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    GT              reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    GTE             reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    NE              reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    EE              reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 58 (lentry -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 58 (lentry -> LBRACKET RBRACKET .)


state 45

    (6) stmts -> function stmts .

    RCURLY          reduce using rule 6 (stmts -> function stmts .)
    $end            reduce using rule 6 (stmts -> function stmts .)


state 46

    (32) logical -> NOT expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 32 (logical -> NOT expression .)
    OR              reduce using rule 32 (logical -> NOT expression .)
    SEMICOLON       reduce using rule 32 (logical -> NOT expression .)
    RPAREN          reduce using rule 32 (logical -> NOT expression .)
    COMMA           reduce using rule 32 (logical -> NOT expression .)
    RBRACKET        reduce using rule 32 (logical -> NOT expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 32 (logical -> NOT expression .) ]
  ! PLUS            [ reduce using rule 32 (logical -> NOT expression .) ]
  ! TIMES           [ reduce using rule 32 (logical -> NOT expression .) ]
  ! MINUS           [ reduce using rule 32 (logical -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 32 (logical -> NOT expression .) ]
  ! INTDIVIDE       [ reduce using rule 32 (logical -> NOT expression .) ]
  ! EXPONENT        [ reduce using rule 32 (logical -> NOT expression .) ]
  ! MODULUS         [ reduce using rule 32 (logical -> NOT expression .) ]
  ! LT              [ reduce using rule 32 (logical -> NOT expression .) ]
  ! LTE             [ reduce using rule 32 (logical -> NOT expression .) ]
  ! GT              [ reduce using rule 32 (logical -> NOT expression .) ]
  ! GTE             [ reduce using rule 32 (logical -> NOT expression .) ]
  ! NE              [ reduce using rule 32 (logical -> NOT expression .) ]
  ! EE              [ reduce using rule 32 (logical -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 32 (logical -> NOT expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]


state 47

    (46) mathexpression -> expression MINUS . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 79
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 48

    (44) mathexpression -> expression PLUS . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 80
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 49

    (35) logical -> expression IN . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 81
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 50

    (47) mathexpression -> expression DIVIDE . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 82
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 51

    (50) mathexpression -> expression MODULUS . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 83
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 52

    (36) comparison -> expression LT . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 84
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 53

    (34) logical -> expression OR . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 85
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 54

    (41) comparison -> expression EE . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 86
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 55

    (49) mathexpression -> expression EXPONENT . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 87
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 56

    (37) comparison -> expression LTE . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 88
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 57

    (43) assignment -> expression LBRACKET . expression RBRACKET EQUALS expression
    (31) lindex -> expression LBRACKET . expression RBRACKET
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 89
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 58

    (40) comparison -> expression NE . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 90
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 59

    (38) comparison -> expression GT . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 91
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 60

    (45) mathexpression -> expression TIMES . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 92
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 61

    (33) logical -> expression AND . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 93
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 62

    (48) mathexpression -> expression INTDIVIDE . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 94
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 63

    (39) comparison -> expression GTE . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 95
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 64

    (21) print -> PRINT LPAREN . expression RPAREN
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 96
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 65

    (5) stmts -> loop stmts .

    RCURLY          reduce using rule 5 (stmts -> loop stmts .)
    $end            reduce using rule 5 (stmts -> loop stmts .)


state 66

    (2) stmts -> stmt SEMICOLON . stmts
    (2) stmts -> . stmt SEMICOLON stmts
    (3) stmts -> . block stmts
    (4) stmts -> . conditional stmts
    (5) stmts -> . loop stmts
    (6) stmts -> . function stmts
    (7) stmts -> . empty
    (12) stmt -> . expression
    (13) stmt -> . assignment
    (14) stmt -> . print
    (15) stmt -> . return
    (11) block -> . LCURLY stmts RCURLY
    (8) conditional -> . IF LPAREN expression RPAREN block
    (9) conditional -> . IF LPAREN expression RPAREN block ELSE block
    (10) loop -> . WHILE LPAREN expression RPAREN block
    (16) function -> . ID LPAREN parameters RPAREN block
    (17) function -> . ID LPAREN RPAREN block
    (64) empty -> .
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (42) assignment -> . ID EQUALS expression
    (43) assignment -> . expression LBRACKET expression RBRACKET EQUALS expression
    (21) print -> . PRINT LPAREN expression RPAREN
    (20) return -> . RETURN expression
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    LCURLY          shift and go to state 31
    IF              shift and go to state 7
    WHILE           shift and go to state 24
    ID              shift and go to state 20
    $end            reduce using rule 64 (empty -> .)
    RCURLY          reduce using rule 64 (empty -> .)
    PRINT           shift and go to state 15
    RETURN          shift and go to state 33
    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8

    mathexpression                 shift and go to state 14
    block                          shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    comparison                     shift and go to state 18
    functioncall                   shift and go to state 22
    return                         shift and go to state 23
    variable                       shift and go to state 26
    lindex                         shift and go to state 17
    assignment                     shift and go to state 30
    print                          shift and go to state 6
    lentry                         shift and go to state 28
    stmt                           shift and go to state 19
    stmts                          shift and go to state 97
    logical                        shift and go to state 9
    function                       shift and go to state 10
    loop                           shift and go to state 16
    factor                         shift and go to state 12
    expression                     shift and go to state 13

state 67

    (16) function -> ID LPAREN . parameters RPAREN block
    (17) function -> ID LPAREN . RPAREN block
    (22) functioncall -> ID LPAREN . list RPAREN
    (23) functioncall -> ID LPAREN . RPAREN
    (18) parameters -> . parameters COMMA ID
    (19) parameters -> . ID
    (60) list -> . listhead elem
    (61) listhead -> . listhead elem COMMA
    (62) listhead -> . empty
    (64) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    RPAREN          shift and go to state 98
    ID              shift and go to state 100
    NOT             reduce using rule 64 (empty -> .)
    MINUS           reduce using rule 64 (empty -> .)
    LPAREN          reduce using rule 64 (empty -> .)
    NUMBER          reduce using rule 64 (empty -> .)
    REAL            reduce using rule 64 (empty -> .)
    STRING          reduce using rule 64 (empty -> .)
    LBRACKET        reduce using rule 64 (empty -> .)

  ! ID              [ reduce using rule 64 (empty -> .) ]

    empty                          shift and go to state 41
    listhead                       shift and go to state 42
    list                           shift and go to state 99
    parameters                     shift and go to state 101

state 68

    (42) assignment -> ID EQUALS . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 102
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 69

    (10) loop -> WHILE LPAREN . expression RPAREN block
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 103
    variable                       shift and go to state 26
    functioncall                   shift and go to state 22
    lentry                         shift and go to state 28
    factor                         shift and go to state 12

state 70

    (11) block -> LCURLY stmts . RCURLY

    RCURLY          shift and go to state 104


state 71

    (20) return -> RETURN expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 20 (return -> RETURN expression .)
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 72

    (52) factor -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    IN              reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    INTDIVIDE       reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    LTE             reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    GTE             reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    EE              reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 52 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 52 (factor -> LPAREN expression RPAREN .)


state 73

    (31) lindex -> expression LBRACKET . expression RBRACKET
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 105
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 74

    (22) functioncall -> ID LPAREN . list RPAREN
    (23) functioncall -> ID LPAREN . RPAREN
    (60) list -> . listhead elem
    (61) listhead -> . listhead elem COMMA
    (62) listhead -> . empty
    (64) empty -> .

    RPAREN          shift and go to state 106
    NOT             reduce using rule 64 (empty -> .)
    MINUS           reduce using rule 64 (empty -> .)
    LPAREN          reduce using rule 64 (empty -> .)
    NUMBER          reduce using rule 64 (empty -> .)
    REAL            reduce using rule 64 (empty -> .)
    STRING          reduce using rule 64 (empty -> .)
    LBRACKET        reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)

    listhead                       shift and go to state 42
    empty                          shift and go to state 41
    list                           shift and go to state 99

state 75

    (8) conditional -> IF LPAREN expression . RPAREN block
    (9) conditional -> IF LPAREN expression . RPAREN block ELSE block
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 107
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 76

    (63) elem -> expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    COMMA           reduce using rule 63 (elem -> expression .)
    RBRACKET        reduce using rule 63 (elem -> expression .)
    RPAREN          reduce using rule 63 (elem -> expression .)
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 77

    (60) list -> listhead elem .
    (61) listhead -> listhead elem . COMMA

    RPAREN          reduce using rule 60 (list -> listhead elem .)
    RBRACKET        reduce using rule 60 (list -> listhead elem .)
    COMMA           shift and go to state 108


state 78

    (59) lentry -> LBRACKET list RBRACKET .

    AND             reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    OR              reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    IN              reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    PLUS            reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    TIMES           reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    MINUS           reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    DIVIDE          reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    INTDIVIDE       reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    EXPONENT        reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    MODULUS         reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    LT              reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    LTE             reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    GT              reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    GTE             reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    NE              reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    EE              reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    LBRACKET        reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    SEMICOLON       reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    RPAREN          reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    COMMA           reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)
    RBRACKET        reduce using rule 59 (lentry -> LBRACKET list RBRACKET .)


state 79

    (46) mathexpression -> expression MINUS expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 46 (mathexpression -> expression MINUS expression .)
    OR              reduce using rule 46 (mathexpression -> expression MINUS expression .)
    IN              reduce using rule 46 (mathexpression -> expression MINUS expression .)
    PLUS            reduce using rule 46 (mathexpression -> expression MINUS expression .)
    MINUS           reduce using rule 46 (mathexpression -> expression MINUS expression .)
    LT              reduce using rule 46 (mathexpression -> expression MINUS expression .)
    LTE             reduce using rule 46 (mathexpression -> expression MINUS expression .)
    GT              reduce using rule 46 (mathexpression -> expression MINUS expression .)
    GTE             reduce using rule 46 (mathexpression -> expression MINUS expression .)
    NE              reduce using rule 46 (mathexpression -> expression MINUS expression .)
    EE              reduce using rule 46 (mathexpression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 46 (mathexpression -> expression MINUS expression .)
    RPAREN          reduce using rule 46 (mathexpression -> expression MINUS expression .)
    COMMA           reduce using rule 46 (mathexpression -> expression MINUS expression .)
    RBRACKET        reduce using rule 46 (mathexpression -> expression MINUS expression .)
    TIMES           shift and go to state 60
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! TIMES           [ reduce using rule 46 (mathexpression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (mathexpression -> expression MINUS expression .) ]
  ! INTDIVIDE       [ reduce using rule 46 (mathexpression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 46 (mathexpression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 46 (mathexpression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 46 (mathexpression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 47 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 80

    (44) mathexpression -> expression PLUS expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 44 (mathexpression -> expression PLUS expression .)
    OR              reduce using rule 44 (mathexpression -> expression PLUS expression .)
    IN              reduce using rule 44 (mathexpression -> expression PLUS expression .)
    PLUS            reduce using rule 44 (mathexpression -> expression PLUS expression .)
    MINUS           reduce using rule 44 (mathexpression -> expression PLUS expression .)
    LT              reduce using rule 44 (mathexpression -> expression PLUS expression .)
    LTE             reduce using rule 44 (mathexpression -> expression PLUS expression .)
    GT              reduce using rule 44 (mathexpression -> expression PLUS expression .)
    GTE             reduce using rule 44 (mathexpression -> expression PLUS expression .)
    NE              reduce using rule 44 (mathexpression -> expression PLUS expression .)
    EE              reduce using rule 44 (mathexpression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 44 (mathexpression -> expression PLUS expression .)
    RPAREN          reduce using rule 44 (mathexpression -> expression PLUS expression .)
    COMMA           reduce using rule 44 (mathexpression -> expression PLUS expression .)
    RBRACKET        reduce using rule 44 (mathexpression -> expression PLUS expression .)
    TIMES           shift and go to state 60
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! TIMES           [ reduce using rule 44 (mathexpression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (mathexpression -> expression PLUS expression .) ]
  ! INTDIVIDE       [ reduce using rule 44 (mathexpression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 44 (mathexpression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 44 (mathexpression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 44 (mathexpression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 47 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 81

    (35) logical -> expression IN expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 35 (logical -> expression IN expression .)
    OR              reduce using rule 35 (logical -> expression IN expression .)
    IN              reduce using rule 35 (logical -> expression IN expression .)
    LT              reduce using rule 35 (logical -> expression IN expression .)
    LTE             reduce using rule 35 (logical -> expression IN expression .)
    GT              reduce using rule 35 (logical -> expression IN expression .)
    GTE             reduce using rule 35 (logical -> expression IN expression .)
    NE              reduce using rule 35 (logical -> expression IN expression .)
    EE              reduce using rule 35 (logical -> expression IN expression .)
    SEMICOLON       reduce using rule 35 (logical -> expression IN expression .)
    RPAREN          reduce using rule 35 (logical -> expression IN expression .)
    COMMA           reduce using rule 35 (logical -> expression IN expression .)
    RBRACKET        reduce using rule 35 (logical -> expression IN expression .)
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! PLUS            [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! INTDIVIDE       [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! EXPONENT        [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! MODULUS         [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! LBRACKET        [ reduce using rule 35 (logical -> expression IN expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 82

    (47) mathexpression -> expression DIVIDE expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    OR              reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    IN              reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    PLUS            reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    TIMES           reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    MINUS           reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    INTDIVIDE       reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    EXPONENT        reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    LT              reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    LTE             reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    GT              reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    GTE             reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    NE              reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    EE              reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    COMMA           reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 47 (mathexpression -> expression DIVIDE expression .)
    LBRACKET        shift and go to state 73

  ! LBRACKET        [ reduce using rule 47 (mathexpression -> expression DIVIDE expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! INTDIVIDE       [ shift and go to state 62 ]
  ! EXPONENT        [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 83

    (50) mathexpression -> expression MODULUS expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    OR              reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    IN              reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    PLUS            reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    MINUS           reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    INTDIVIDE       reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    EXPONENT        reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    MODULUS         reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    LT              reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    LTE             reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    GT              reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    GTE             reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    NE              reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    EE              reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    RPAREN          reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    COMMA           reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    RBRACKET        reduce using rule 50 (mathexpression -> expression MODULUS expression .)
    TIMES           shift and go to state 60
    DIVIDE          shift and go to state 50
    LBRACKET        shift and go to state 73

  ! TIMES           [ reduce using rule 50 (mathexpression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (mathexpression -> expression MODULUS expression .) ]
  ! LBRACKET        [ reduce using rule 50 (mathexpression -> expression MODULUS expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 47 ]
  ! INTDIVIDE       [ shift and go to state 62 ]
  ! EXPONENT        [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 84

    (36) comparison -> expression LT expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 36 (comparison -> expression LT expression .)
    AND             reduce using rule 36 (comparison -> expression LT expression .)
    OR              reduce using rule 36 (comparison -> expression LT expression .)
    LT              reduce using rule 36 (comparison -> expression LT expression .)
    LTE             reduce using rule 36 (comparison -> expression LT expression .)
    GT              reduce using rule 36 (comparison -> expression LT expression .)
    GTE             reduce using rule 36 (comparison -> expression LT expression .)
    NE              reduce using rule 36 (comparison -> expression LT expression .)
    EE              reduce using rule 36 (comparison -> expression LT expression .)
    SEMICOLON       reduce using rule 36 (comparison -> expression LT expression .)
    COMMA           reduce using rule 36 (comparison -> expression LT expression .)
    RBRACKET        reduce using rule 36 (comparison -> expression LT expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! INTDIVIDE       [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! EXPONENT        [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! MODULUS         [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! LBRACKET        [ reduce using rule 36 (comparison -> expression LT expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 85

    (34) logical -> expression OR expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    OR              reduce using rule 34 (logical -> expression OR expression .)
    SEMICOLON       reduce using rule 34 (logical -> expression OR expression .)
    RPAREN          reduce using rule 34 (logical -> expression OR expression .)
    COMMA           reduce using rule 34 (logical -> expression OR expression .)
    RBRACKET        reduce using rule 34 (logical -> expression OR expression .)
    AND             shift and go to state 61
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73

  ! AND             [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! IN              [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! INTDIVIDE       [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! LT              [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! LTE             [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! GT              [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! GTE             [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! NE              [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! EE              [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 34 (logical -> expression OR expression .) ]
  ! OR              [ shift and go to state 53 ]


state 86

    (41) comparison -> expression EE expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 41 (comparison -> expression EE expression .)
    AND             reduce using rule 41 (comparison -> expression EE expression .)
    OR              reduce using rule 41 (comparison -> expression EE expression .)
    LT              reduce using rule 41 (comparison -> expression EE expression .)
    LTE             reduce using rule 41 (comparison -> expression EE expression .)
    GT              reduce using rule 41 (comparison -> expression EE expression .)
    GTE             reduce using rule 41 (comparison -> expression EE expression .)
    NE              reduce using rule 41 (comparison -> expression EE expression .)
    EE              reduce using rule 41 (comparison -> expression EE expression .)
    SEMICOLON       reduce using rule 41 (comparison -> expression EE expression .)
    COMMA           reduce using rule 41 (comparison -> expression EE expression .)
    RBRACKET        reduce using rule 41 (comparison -> expression EE expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! PLUS            [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! TIMES           [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! MINUS           [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! DIVIDE          [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! INTDIVIDE       [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! EXPONENT        [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! MODULUS         [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! LBRACKET        [ reduce using rule 41 (comparison -> expression EE expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 87

    (49) mathexpression -> expression EXPONENT expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    OR              reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    IN              reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    PLUS            reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    MINUS           reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    INTDIVIDE       reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    LT              reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    LTE             reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    GT              reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    GTE             reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    NE              reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    EE              reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    COMMA           reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    RBRACKET        reduce using rule 49 (mathexpression -> expression EXPONENT expression .)
    TIMES           shift and go to state 60
    DIVIDE          shift and go to state 50
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! TIMES           [ reduce using rule 49 (mathexpression -> expression EXPONENT expression .) ]
  ! DIVIDE          [ reduce using rule 49 (mathexpression -> expression EXPONENT expression .) ]
  ! MODULUS         [ reduce using rule 49 (mathexpression -> expression EXPONENT expression .) ]
  ! LBRACKET        [ reduce using rule 49 (mathexpression -> expression EXPONENT expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 47 ]
  ! INTDIVIDE       [ shift and go to state 62 ]
  ! EXPONENT        [ shift and go to state 55 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 88

    (37) comparison -> expression LTE expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 37 (comparison -> expression LTE expression .)
    AND             reduce using rule 37 (comparison -> expression LTE expression .)
    OR              reduce using rule 37 (comparison -> expression LTE expression .)
    LT              reduce using rule 37 (comparison -> expression LTE expression .)
    LTE             reduce using rule 37 (comparison -> expression LTE expression .)
    GT              reduce using rule 37 (comparison -> expression LTE expression .)
    GTE             reduce using rule 37 (comparison -> expression LTE expression .)
    NE              reduce using rule 37 (comparison -> expression LTE expression .)
    EE              reduce using rule 37 (comparison -> expression LTE expression .)
    SEMICOLON       reduce using rule 37 (comparison -> expression LTE expression .)
    COMMA           reduce using rule 37 (comparison -> expression LTE expression .)
    RBRACKET        reduce using rule 37 (comparison -> expression LTE expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! PLUS            [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! INTDIVIDE       [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! EXPONENT        [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! MODULUS         [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! LBRACKET        [ reduce using rule 37 (comparison -> expression LTE expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 89

    (43) assignment -> expression LBRACKET expression . RBRACKET EQUALS expression
    (31) lindex -> expression LBRACKET expression . RBRACKET
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 109
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 90

    (40) comparison -> expression NE expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 40 (comparison -> expression NE expression .)
    AND             reduce using rule 40 (comparison -> expression NE expression .)
    OR              reduce using rule 40 (comparison -> expression NE expression .)
    LT              reduce using rule 40 (comparison -> expression NE expression .)
    LTE             reduce using rule 40 (comparison -> expression NE expression .)
    GT              reduce using rule 40 (comparison -> expression NE expression .)
    GTE             reduce using rule 40 (comparison -> expression NE expression .)
    NE              reduce using rule 40 (comparison -> expression NE expression .)
    EE              reduce using rule 40 (comparison -> expression NE expression .)
    SEMICOLON       reduce using rule 40 (comparison -> expression NE expression .)
    COMMA           reduce using rule 40 (comparison -> expression NE expression .)
    RBRACKET        reduce using rule 40 (comparison -> expression NE expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! PLUS            [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! INTDIVIDE       [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! EXPONENT        [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! MODULUS         [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! LBRACKET        [ reduce using rule 40 (comparison -> expression NE expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 91

    (38) comparison -> expression GT expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 38 (comparison -> expression GT expression .)
    AND             reduce using rule 38 (comparison -> expression GT expression .)
    OR              reduce using rule 38 (comparison -> expression GT expression .)
    LT              reduce using rule 38 (comparison -> expression GT expression .)
    LTE             reduce using rule 38 (comparison -> expression GT expression .)
    GT              reduce using rule 38 (comparison -> expression GT expression .)
    GTE             reduce using rule 38 (comparison -> expression GT expression .)
    NE              reduce using rule 38 (comparison -> expression GT expression .)
    EE              reduce using rule 38 (comparison -> expression GT expression .)
    SEMICOLON       reduce using rule 38 (comparison -> expression GT expression .)
    COMMA           reduce using rule 38 (comparison -> expression GT expression .)
    RBRACKET        reduce using rule 38 (comparison -> expression GT expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! INTDIVIDE       [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! EXPONENT        [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! MODULUS         [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! LBRACKET        [ reduce using rule 38 (comparison -> expression GT expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 92

    (45) mathexpression -> expression TIMES expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 45 (mathexpression -> expression TIMES expression .)
    OR              reduce using rule 45 (mathexpression -> expression TIMES expression .)
    IN              reduce using rule 45 (mathexpression -> expression TIMES expression .)
    PLUS            reduce using rule 45 (mathexpression -> expression TIMES expression .)
    TIMES           reduce using rule 45 (mathexpression -> expression TIMES expression .)
    MINUS           reduce using rule 45 (mathexpression -> expression TIMES expression .)
    DIVIDE          reduce using rule 45 (mathexpression -> expression TIMES expression .)
    INTDIVIDE       reduce using rule 45 (mathexpression -> expression TIMES expression .)
    EXPONENT        reduce using rule 45 (mathexpression -> expression TIMES expression .)
    MODULUS         reduce using rule 45 (mathexpression -> expression TIMES expression .)
    LT              reduce using rule 45 (mathexpression -> expression TIMES expression .)
    LTE             reduce using rule 45 (mathexpression -> expression TIMES expression .)
    GT              reduce using rule 45 (mathexpression -> expression TIMES expression .)
    GTE             reduce using rule 45 (mathexpression -> expression TIMES expression .)
    NE              reduce using rule 45 (mathexpression -> expression TIMES expression .)
    EE              reduce using rule 45 (mathexpression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 45 (mathexpression -> expression TIMES expression .)
    RPAREN          reduce using rule 45 (mathexpression -> expression TIMES expression .)
    COMMA           reduce using rule 45 (mathexpression -> expression TIMES expression .)
    RBRACKET        reduce using rule 45 (mathexpression -> expression TIMES expression .)
    LBRACKET        shift and go to state 73

  ! LBRACKET        [ reduce using rule 45 (mathexpression -> expression TIMES expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! INTDIVIDE       [ shift and go to state 62 ]
  ! EXPONENT        [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 93

    (33) logical -> expression AND expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 33 (logical -> expression AND expression .)
    OR              reduce using rule 33 (logical -> expression AND expression .)
    SEMICOLON       reduce using rule 33 (logical -> expression AND expression .)
    RPAREN          reduce using rule 33 (logical -> expression AND expression .)
    COMMA           reduce using rule 33 (logical -> expression AND expression .)
    RBRACKET        reduce using rule 33 (logical -> expression AND expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! INTDIVIDE       [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! LT              [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! LTE             [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! GT              [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! GTE             [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! NE              [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! EE              [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 33 (logical -> expression AND expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]


state 94

    (48) mathexpression -> expression INTDIVIDE expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    AND             reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    OR              reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    IN              reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    PLUS            reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    MINUS           reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    INTDIVIDE       reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    LT              reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    LTE             reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    GT              reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    GTE             reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    NE              reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    EE              reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    SEMICOLON       reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    RPAREN          reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    COMMA           reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    RBRACKET        reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .)
    TIMES           shift and go to state 60
    DIVIDE          shift and go to state 50
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! TIMES           [ reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .) ]
  ! EXPONENT        [ reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .) ]
  ! MODULUS         [ reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .) ]
  ! LBRACKET        [ reduce using rule 48 (mathexpression -> expression INTDIVIDE expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! IN              [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 47 ]
  ! INTDIVIDE       [ shift and go to state 62 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 95

    (39) comparison -> expression GTE expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 39 (comparison -> expression GTE expression .)
    AND             reduce using rule 39 (comparison -> expression GTE expression .)
    OR              reduce using rule 39 (comparison -> expression GTE expression .)
    LT              reduce using rule 39 (comparison -> expression GTE expression .)
    LTE             reduce using rule 39 (comparison -> expression GTE expression .)
    GT              reduce using rule 39 (comparison -> expression GTE expression .)
    GTE             reduce using rule 39 (comparison -> expression GTE expression .)
    NE              reduce using rule 39 (comparison -> expression GTE expression .)
    EE              reduce using rule 39 (comparison -> expression GTE expression .)
    SEMICOLON       reduce using rule 39 (comparison -> expression GTE expression .)
    COMMA           reduce using rule 39 (comparison -> expression GTE expression .)
    RBRACKET        reduce using rule 39 (comparison -> expression GTE expression .)
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LBRACKET        shift and go to state 73

  ! IN              [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! PLUS            [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! INTDIVIDE       [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! EXPONENT        [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! MODULUS         [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! LBRACKET        [ reduce using rule 39 (comparison -> expression GTE expression .) ]
  ! AND             [ shift and go to state 61 ]
  ! OR              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 56 ]
  ! GT              [ shift and go to state 59 ]
  ! GTE             [ shift and go to state 63 ]
  ! NE              [ shift and go to state 58 ]
  ! EE              [ shift and go to state 54 ]


state 96

    (21) print -> PRINT LPAREN expression . RPAREN
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 110
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 97

    (2) stmts -> stmt SEMICOLON stmts .

    RCURLY          reduce using rule 2 (stmts -> stmt SEMICOLON stmts .)
    $end            reduce using rule 2 (stmts -> stmt SEMICOLON stmts .)


state 98

    (17) function -> ID LPAREN RPAREN . block
    (23) functioncall -> ID LPAREN RPAREN .
    (11) block -> . LCURLY stmts RCURLY

    LBRACKET        reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    AND             reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    OR              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    IN              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    INTDIVIDE       reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    EXPONENT        reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    MODULUS         reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    LT              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    LTE             reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    GT              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    GTE             reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    NE              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    EE              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    LCURLY          shift and go to state 31

    block                          shift and go to state 111

state 99

    (22) functioncall -> ID LPAREN list . RPAREN

    RPAREN          shift and go to state 112


state 100

    (19) parameters -> ID .

    RPAREN          reduce using rule 19 (parameters -> ID .)
    COMMA           reduce using rule 19 (parameters -> ID .)


state 101

    (16) function -> ID LPAREN parameters . RPAREN block
    (18) parameters -> parameters . COMMA ID

    RPAREN          shift and go to state 113
    COMMA           shift and go to state 114


state 102

    (42) assignment -> ID EQUALS expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 42 (assignment -> ID EQUALS expression .)
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 103

    (10) loop -> WHILE LPAREN expression . RPAREN block
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 115
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 104

    (11) block -> LCURLY stmts RCURLY .

    LCURLY          reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    IF              reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    WHILE           reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    ID              reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    PRINT           reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    RETURN          reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    NOT             reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    MINUS           reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    LPAREN          reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    NUMBER          reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    REAL            reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    STRING          reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    LBRACKET        reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    $end            reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    RCURLY          reduce using rule 11 (block -> LCURLY stmts RCURLY .)
    ELSE            reduce using rule 11 (block -> LCURLY stmts RCURLY .)


state 105

    (31) lindex -> expression LBRACKET expression . RBRACKET
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 116
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 106

    (23) functioncall -> ID LPAREN RPAREN .

    AND             reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    OR              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    IN              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    INTDIVIDE       reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    EXPONENT        reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    MODULUS         reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    LT              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    LTE             reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    GT              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    GTE             reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    NE              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    EE              reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 23 (functioncall -> ID LPAREN RPAREN .)


state 107

    (8) conditional -> IF LPAREN expression RPAREN . block
    (9) conditional -> IF LPAREN expression RPAREN . block ELSE block
    (11) block -> . LCURLY stmts RCURLY

    LCURLY          shift and go to state 31

    block                          shift and go to state 117

state 108

    (61) listhead -> listhead elem COMMA .

    NOT             reduce using rule 61 (listhead -> listhead elem COMMA .)
    MINUS           reduce using rule 61 (listhead -> listhead elem COMMA .)
    LPAREN          reduce using rule 61 (listhead -> listhead elem COMMA .)
    NUMBER          reduce using rule 61 (listhead -> listhead elem COMMA .)
    REAL            reduce using rule 61 (listhead -> listhead elem COMMA .)
    STRING          reduce using rule 61 (listhead -> listhead elem COMMA .)
    LBRACKET        reduce using rule 61 (listhead -> listhead elem COMMA .)
    ID              reduce using rule 61 (listhead -> listhead elem COMMA .)


state 109

    (43) assignment -> expression LBRACKET expression RBRACKET . EQUALS expression
    (31) lindex -> expression LBRACKET expression RBRACKET .

    EQUALS          shift and go to state 118
    LBRACKET        reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    IN              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    INTDIVIDE       reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    EXPONENT        reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    LTE             reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    GTE             reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    NE              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    EE              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)


state 110

    (21) print -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 21 (print -> PRINT LPAREN expression RPAREN .)


state 111

    (17) function -> ID LPAREN RPAREN block .

    LCURLY          reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    IF              reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    WHILE           reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    ID              reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    PRINT           reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    RETURN          reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    NOT             reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    MINUS           reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    LPAREN          reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    NUMBER          reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    REAL            reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    STRING          reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    LBRACKET        reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    $end            reduce using rule 17 (function -> ID LPAREN RPAREN block .)
    RCURLY          reduce using rule 17 (function -> ID LPAREN RPAREN block .)


state 112

    (22) functioncall -> ID LPAREN list RPAREN .

    AND             reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    OR              reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    IN              reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    PLUS            reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    TIMES           reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    MINUS           reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    DIVIDE          reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    INTDIVIDE       reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    EXPONENT        reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    MODULUS         reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    LT              reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    LTE             reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    GT              reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    GTE             reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    NE              reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    EE              reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    LBRACKET        reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    SEMICOLON       reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    RPAREN          reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    COMMA           reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)
    RBRACKET        reduce using rule 22 (functioncall -> ID LPAREN list RPAREN .)


state 113

    (16) function -> ID LPAREN parameters RPAREN . block
    (11) block -> . LCURLY stmts RCURLY

    LCURLY          shift and go to state 31

    block                          shift and go to state 119

state 114

    (18) parameters -> parameters COMMA . ID

    ID              shift and go to state 120


state 115

    (10) loop -> WHILE LPAREN expression RPAREN . block
    (11) block -> . LCURLY stmts RCURLY

    LCURLY          shift and go to state 31

    block                          shift and go to state 121

state 116

    (31) lindex -> expression LBRACKET expression RBRACKET .

    AND             reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    IN              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    INTDIVIDE       reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    EXPONENT        reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    LTE             reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    GTE             reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    NE              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    EE              reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 31 (lindex -> expression LBRACKET expression RBRACKET .)


state 117

    (8) conditional -> IF LPAREN expression RPAREN block .
    (9) conditional -> IF LPAREN expression RPAREN block . ELSE block

    LCURLY          reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    PRINT           reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    NOT             reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    REAL            reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    STRING          reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    RCURLY          reduce using rule 8 (conditional -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 122


state 118

    (43) assignment -> expression LBRACKET expression RBRACKET EQUALS . expression
    (24) expression -> . logical
    (25) expression -> . mathexpression
    (26) expression -> . comparison
    (27) expression -> . factor
    (28) expression -> . lentry
    (29) expression -> . lindex
    (30) expression -> . functioncall
    (32) logical -> . NOT expression
    (33) logical -> . expression AND expression
    (34) logical -> . expression OR expression
    (35) logical -> . expression IN expression
    (44) mathexpression -> . expression PLUS expression
    (45) mathexpression -> . expression TIMES expression
    (46) mathexpression -> . expression MINUS expression
    (47) mathexpression -> . expression DIVIDE expression
    (48) mathexpression -> . expression INTDIVIDE expression
    (49) mathexpression -> . expression EXPONENT expression
    (50) mathexpression -> . expression MODULUS expression
    (51) mathexpression -> . MINUS factor
    (36) comparison -> . expression LT expression
    (37) comparison -> . expression LTE expression
    (38) comparison -> . expression GT expression
    (39) comparison -> . expression GTE expression
    (40) comparison -> . expression NE expression
    (41) comparison -> . expression EE expression
    (52) factor -> . LPAREN expression RPAREN
    (53) factor -> . NUMBER
    (54) factor -> . REAL
    (55) factor -> . STRING
    (56) factor -> . variable
    (58) lentry -> . LBRACKET RBRACKET
    (59) lentry -> . LBRACKET list RBRACKET
    (31) lindex -> . expression LBRACKET expression RBRACKET
    (22) functioncall -> . ID LPAREN list RPAREN
    (23) functioncall -> . ID LPAREN RPAREN
    (57) variable -> . ID

    NOT             shift and go to state 11
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 1
    NUMBER          shift and go to state 29
    REAL            shift and go to state 27
    STRING          shift and go to state 25
    LBRACKET        shift and go to state 8
    ID              shift and go to state 35

    mathexpression                 shift and go to state 14
    lindex                         shift and go to state 17
    comparison                     shift and go to state 18
    logical                        shift and go to state 9
    expression                     shift and go to state 123
    variable                       shift and go to state 26
    lentry                         shift and go to state 28
    factor                         shift and go to state 12
    functioncall                   shift and go to state 22

state 119

    (16) function -> ID LPAREN parameters RPAREN block .

    LCURLY          reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    IF              reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    WHILE           reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    ID              reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    PRINT           reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    RETURN          reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    NOT             reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    MINUS           reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    LPAREN          reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    NUMBER          reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    REAL            reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    STRING          reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    LBRACKET        reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    $end            reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)
    RCURLY          reduce using rule 16 (function -> ID LPAREN parameters RPAREN block .)


state 120

    (18) parameters -> parameters COMMA ID .

    RPAREN          reduce using rule 18 (parameters -> parameters COMMA ID .)
    COMMA           reduce using rule 18 (parameters -> parameters COMMA ID .)


state 121

    (10) loop -> WHILE LPAREN expression RPAREN block .

    LCURLY          reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    PRINT           reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    NOT             reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    MINUS           reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    REAL            reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    STRING          reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    RCURLY          reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 10 (loop -> WHILE LPAREN expression RPAREN block .)


state 122

    (9) conditional -> IF LPAREN expression RPAREN block ELSE . block
    (11) block -> . LCURLY stmts RCURLY

    LCURLY          shift and go to state 31

    block                          shift and go to state 124

state 123

    (43) assignment -> expression LBRACKET expression RBRACKET EQUALS expression .
    (33) logical -> expression . AND expression
    (34) logical -> expression . OR expression
    (35) logical -> expression . IN expression
    (44) mathexpression -> expression . PLUS expression
    (45) mathexpression -> expression . TIMES expression
    (46) mathexpression -> expression . MINUS expression
    (47) mathexpression -> expression . DIVIDE expression
    (48) mathexpression -> expression . INTDIVIDE expression
    (49) mathexpression -> expression . EXPONENT expression
    (50) mathexpression -> expression . MODULUS expression
    (36) comparison -> expression . LT expression
    (37) comparison -> expression . LTE expression
    (38) comparison -> expression . GT expression
    (39) comparison -> expression . GTE expression
    (40) comparison -> expression . NE expression
    (41) comparison -> expression . EE expression
    (31) lindex -> expression . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 43 (assignment -> expression LBRACKET expression RBRACKET EQUALS expression .)
    AND             shift and go to state 61
    OR              shift and go to state 53
    IN              shift and go to state 49
    PLUS            shift and go to state 48
    TIMES           shift and go to state 60
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 50
    INTDIVIDE       shift and go to state 62
    EXPONENT        shift and go to state 55
    MODULUS         shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 56
    GT              shift and go to state 59
    GTE             shift and go to state 63
    NE              shift and go to state 58
    EE              shift and go to state 54
    LBRACKET        shift and go to state 73


state 124

    (9) conditional -> IF LPAREN expression RPAREN block ELSE block .

    LCURLY          reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    PRINT           reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    NOT             reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    REAL            reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACKET        reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)
    RCURLY          reduce using rule 9 (conditional -> IF LPAREN expression RPAREN block ELSE block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
